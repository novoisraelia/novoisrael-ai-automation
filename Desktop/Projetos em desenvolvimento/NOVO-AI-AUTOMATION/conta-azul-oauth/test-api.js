require('dotenv').config();
const fetch = require('node-fetch');
const fs = require('fs');

const BASE = 'https://api.contaazul.com';
const TOKENS_FILE = './tokens.json';

async function testAPI() {
  console.log('üîç Testando conectividade com API do Conta Azul...\n');

  // 1. Verificar se tokens existem
  console.log('1Ô∏è‚É£ Verificando tokens...');
  if (fs.existsSync(TOKENS_FILE)) {
    const tokens = JSON.parse(fs.readFileSync(TOKENS_FILE, 'utf8'));
    console.log('‚úÖ Arquivo tokens.json encontrado');
    console.log(`üìÖ Salvo em: ${tokens.saved_at}`);
    console.log(`üîë Access Token: ${tokens.access_token ? 'Presente' : 'Ausente'}`);
    console.log(`üîÑ Refresh Token: ${tokens.refresh_token ? 'Presente' : 'Ausente'}\n`);

    // 2. Testar API com access token
    console.log('2Ô∏è‚É£ Testando API com access token...');
    try {
      const response = await fetch(`${BASE}/v1/contacts?page=1&size=5`, {
        headers: {
          'Authorization': `Bearer ${tokens.access_token}`,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const data = await response.json();
        console.log('‚úÖ API funcionando!');
        console.log(`üìä Total de contatos: ${data.total || 'N/A'}`);
        console.log(`üìã Contatos retornados: ${data.data ? data.data.length : 0}`);
        
        if (data.data && data.data.length > 0) {
          console.log('\nüìù Primeiros contatos:');
          data.data.slice(0, 3).forEach((contact, index) => {
            console.log(`   ${index + 1}. ${contact.name || 'Sem nome'} (ID: ${contact.id})`);
          });
        }
      } else {
        console.log(`‚ùå Erro na API: ${response.status} ${response.statusText}`);
        const errorText = await response.text();
        console.log(`üìÑ Detalhes: ${errorText}`);
      }
    } catch (error) {
      console.log(`‚ùå Erro de conex√£o: ${error.message}`);
    }
  } else {
    console.log('‚ùå Arquivo tokens.json n√£o encontrado');
    console.log('üí° Execute o fluxo OAuth primeiro: http://localhost:5050/auth/start\n');
  }

  // 3. Testar conectividade b√°sica
  console.log('3Ô∏è‚É£ Testando conectividade b√°sica...');
  try {
    const response = await fetch(`${BASE}/health`, {
      method: 'GET',
      timeout: 5000
    });
    console.log(`‚úÖ Servidor Conta Azul acess√≠vel: ${response.status}`);
  } catch (error) {
    console.log(`‚ùå Erro de conectividade: ${error.message}`);
  }

  // 4. Verificar configura√ß√µes
  console.log('\n4Ô∏è‚É£ Verificando configura√ß√µes...');
  console.log(`üîß Client ID: ${process.env.CONTA_AZUL_CLIENT_ID ? 'Configurado' : 'Ausente'}`);
  console.log(`üîß Client Secret: ${process.env.CONTA_AZUL_CLIENT_SECRET ? 'Configurado' : 'Ausente'}`);
  console.log(`üîß Redirect URI: ${process.env.CONTA_AZUL_REDIRECT_URI || 'Ausente'}`);
  console.log(`üîß Scopes: ${process.env.CONTA_AZUL_SCOPES || 'Ausente'}`);
  console.log(`üîß Port: ${process.env.PORT || 'Ausente'}`);

  console.log('\nüéØ Resumo:');
  if (fs.existsSync(TOKENS_FILE)) {
    console.log('‚úÖ OAuth configurado e tokens dispon√≠veis');
    console.log('‚úÖ Pronto para usar a API do Conta Azul');
  } else {
    console.log('‚ö†Ô∏è  OAuth n√£o completado');
    console.log('üìã Pr√≥ximos passos:');
    console.log('   1. Execute: node server.js');
    console.log('   2. Acesse: http://localhost:5050/auth/start');
    console.log('   3. Fa√ßa login e autorize a aplica√ß√£o');
    console.log('   4. Execute este teste novamente');
  }
}

testAPI().catch(console.error);
